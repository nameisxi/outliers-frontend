name: Frontend CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile
      
    - name: Create build
      env: 
        CI: false
      run: yarn build
    - name: Zip artifact for deployment
      run: zip build.zip ./build -r
    - uses: actions/upload-artifact@v3
      with:
        name: build
        path: build.zip


#     - name: Run tests
#       run: yarn test

#   deploy:
#     needs: build
#     runs-on: ubuntu-latest
#     permissions:
#       contents: 'read'
#       id-token: 'write'

#     steps:
#     - uses: 'actions/checkout@v3'
    
    - id: 'auth'
      name: GCP Cloud Storage authentication
      uses: 'google-github-actions/auth@v0'
      with: 
        credentials_json: '${{ secrets.GCP_CLOUD_STORAGE_SERVICE_ACCOUNT_CREDENTIALS }}'

    - id: 'upload-folder'
      name: GCP Cloud Storage build upload
      uses: 'google-github-actions/upload-cloud-storage@v0'
      with:
        path: 'build.zip'
        destination: '{{ secrets.GCP_CLOUD_STORAGE_BUCKET }}'

    - id: 'uploaded-files'
      name: GCP Cloud Storage upload output
      run: 'echo "${{ steps.upload-folder.outputs.uploaded }}"'
